/*
 * Copyright (c) 2021 by the OnMetal authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/onmetal/onmetal-api/generated/clientset/versioned/typed/networking/v1alpha1"
	rest "k8s.io/client-go/rest"
	testing "k8s.io/client-go/testing"
)

type FakeNetworkingV1alpha1 struct {
	*testing.Fake
}

func (c *FakeNetworkingV1alpha1) AliasPrefixes(namespace string) v1alpha1.AliasPrefixInterface {
	return &FakeAliasPrefixes{c, namespace}
}

func (c *FakeNetworkingV1alpha1) AliasPrefixRoutings(namespace string) v1alpha1.AliasPrefixRoutingInterface {
	return &FakeAliasPrefixRoutings{c, namespace}
}

func (c *FakeNetworkingV1alpha1) Networks(namespace string) v1alpha1.NetworkInterface {
	return &FakeNetworks{c, namespace}
}

func (c *FakeNetworkingV1alpha1) NetworkInterfaces(namespace string) v1alpha1.NetworkInterfaceInterface {
	return &FakeNetworkInterfaces{c, namespace}
}

func (c *FakeNetworkingV1alpha1) VirtualIPs(namespace string) v1alpha1.VirtualIPInterface {
	return &FakeVirtualIPs{c, namespace}
}

// RESTClient returns a RESTClient that is used to communicate
// with API server by this client implementation.
func (c *FakeNetworkingV1alpha1) RESTClient() rest.Interface {
	var ret *rest.RESTClient
	return ret
}
