// SPDX-FileCopyrightText: 2023 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	"context"

	v1alpha1 "github.com/ironcore-dev/ironcore/api/compute/v1alpha1"
	computev1alpha1 "github.com/ironcore-dev/ironcore/client-go/applyconfigurations/compute/v1alpha1"
	scheme "github.com/ironcore-dev/ironcore/client-go/ironcore/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// MachinePoolsGetter has a method to return a MachinePoolInterface.
// A group's client should implement this interface.
type MachinePoolsGetter interface {
	MachinePools() MachinePoolInterface
}

// MachinePoolInterface has methods to work with MachinePool resources.
type MachinePoolInterface interface {
	Create(ctx context.Context, machinePool *v1alpha1.MachinePool, opts v1.CreateOptions) (*v1alpha1.MachinePool, error)
	Update(ctx context.Context, machinePool *v1alpha1.MachinePool, opts v1.UpdateOptions) (*v1alpha1.MachinePool, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, machinePool *v1alpha1.MachinePool, opts v1.UpdateOptions) (*v1alpha1.MachinePool, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1alpha1.MachinePool, error)
	List(ctx context.Context, opts v1.ListOptions) (*v1alpha1.MachinePoolList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v1alpha1.MachinePool, err error)
	Apply(ctx context.Context, machinePool *computev1alpha1.MachinePoolApplyConfiguration, opts v1.ApplyOptions) (result *v1alpha1.MachinePool, err error)
	// Add a +genclient:noStatus comment above the type to avoid generating ApplyStatus().
	ApplyStatus(ctx context.Context, machinePool *computev1alpha1.MachinePoolApplyConfiguration, opts v1.ApplyOptions) (result *v1alpha1.MachinePool, err error)
	MachinePoolExpansion
}

// machinePools implements MachinePoolInterface
type machinePools struct {
	*gentype.ClientWithListAndApply[*v1alpha1.MachinePool, *v1alpha1.MachinePoolList, *computev1alpha1.MachinePoolApplyConfiguration]
}

// newMachinePools returns a MachinePools
func newMachinePools(c *ComputeV1alpha1Client) *machinePools {
	return &machinePools{
		gentype.NewClientWithListAndApply[*v1alpha1.MachinePool, *v1alpha1.MachinePoolList, *computev1alpha1.MachinePoolApplyConfiguration](
			"machinepools",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *v1alpha1.MachinePool { return &v1alpha1.MachinePool{} },
			func() *v1alpha1.MachinePoolList { return &v1alpha1.MachinePoolList{} }),
	}
}
