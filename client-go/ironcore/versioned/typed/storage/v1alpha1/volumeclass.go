// SPDX-FileCopyrightText: 2023 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	context "context"

	storagev1alpha1 "github.com/ironcore-dev/ironcore/api/storage/v1alpha1"
	applyconfigurationsstoragev1alpha1 "github.com/ironcore-dev/ironcore/client-go/applyconfigurations/storage/v1alpha1"
	scheme "github.com/ironcore-dev/ironcore/client-go/ironcore/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// VolumeClassesGetter has a method to return a VolumeClassInterface.
// A group's client should implement this interface.
type VolumeClassesGetter interface {
	VolumeClasses() VolumeClassInterface
}

// VolumeClassInterface has methods to work with VolumeClass resources.
type VolumeClassInterface interface {
	Create(ctx context.Context, volumeClass *storagev1alpha1.VolumeClass, opts v1.CreateOptions) (*storagev1alpha1.VolumeClass, error)
	Update(ctx context.Context, volumeClass *storagev1alpha1.VolumeClass, opts v1.UpdateOptions) (*storagev1alpha1.VolumeClass, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*storagev1alpha1.VolumeClass, error)
	List(ctx context.Context, opts v1.ListOptions) (*storagev1alpha1.VolumeClassList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *storagev1alpha1.VolumeClass, err error)
	Apply(ctx context.Context, volumeClass *applyconfigurationsstoragev1alpha1.VolumeClassApplyConfiguration, opts v1.ApplyOptions) (result *storagev1alpha1.VolumeClass, err error)
	VolumeClassExpansion
}

// volumeClasses implements VolumeClassInterface
type volumeClasses struct {
	*gentype.ClientWithListAndApply[*storagev1alpha1.VolumeClass, *storagev1alpha1.VolumeClassList, *applyconfigurationsstoragev1alpha1.VolumeClassApplyConfiguration]
}

// newVolumeClasses returns a VolumeClasses
func newVolumeClasses(c *StorageV1alpha1Client) *volumeClasses {
	return &volumeClasses{
		gentype.NewClientWithListAndApply[*storagev1alpha1.VolumeClass, *storagev1alpha1.VolumeClassList, *applyconfigurationsstoragev1alpha1.VolumeClassApplyConfiguration](
			"volumeclasses",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *storagev1alpha1.VolumeClass { return &storagev1alpha1.VolumeClass{} },
			func() *storagev1alpha1.VolumeClassList { return &storagev1alpha1.VolumeClassList{} },
		),
	}
}
