// SPDX-FileCopyrightText: 2025 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/ironcore-dev/ironcore/api/storage/v1alpha1"
	storagev1alpha1 "github.com/ironcore-dev/ironcore/client-go/applyconfigurations/storage/v1alpha1"
	typedstoragev1alpha1 "github.com/ironcore-dev/ironcore/client-go/ironcore/versioned/typed/storage/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeVolumeSnapshots implements VolumeSnapshotInterface
type fakeVolumeSnapshots struct {
	*gentype.FakeClientWithListAndApply[*v1alpha1.VolumeSnapshot, *v1alpha1.VolumeSnapshotList, *storagev1alpha1.VolumeSnapshotApplyConfiguration]
	Fake *FakeStorageV1alpha1
}

func newFakeVolumeSnapshots(fake *FakeStorageV1alpha1, namespace string) typedstoragev1alpha1.VolumeSnapshotInterface {
	return &fakeVolumeSnapshots{
		gentype.NewFakeClientWithListAndApply[*v1alpha1.VolumeSnapshot, *v1alpha1.VolumeSnapshotList, *storagev1alpha1.VolumeSnapshotApplyConfiguration](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("volumesnapshots"),
			v1alpha1.SchemeGroupVersion.WithKind("VolumeSnapshot"),
			func() *v1alpha1.VolumeSnapshot { return &v1alpha1.VolumeSnapshot{} },
			func() *v1alpha1.VolumeSnapshotList { return &v1alpha1.VolumeSnapshotList{} },
			func(dst, src *v1alpha1.VolumeSnapshotList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.VolumeSnapshotList) []*v1alpha1.VolumeSnapshot {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1alpha1.VolumeSnapshotList, items []*v1alpha1.VolumeSnapshot) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
