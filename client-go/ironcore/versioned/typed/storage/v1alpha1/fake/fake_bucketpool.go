// SPDX-FileCopyrightText: 2023 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/ironcore-dev/ironcore/api/storage/v1alpha1"
	storagev1alpha1 "github.com/ironcore-dev/ironcore/client-go/applyconfigurations/storage/v1alpha1"
	typedstoragev1alpha1 "github.com/ironcore-dev/ironcore/client-go/ironcore/versioned/typed/storage/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeBucketPools implements BucketPoolInterface
type fakeBucketPools struct {
	*gentype.FakeClientWithListAndApply[*v1alpha1.BucketPool, *v1alpha1.BucketPoolList, *storagev1alpha1.BucketPoolApplyConfiguration]
	Fake *FakeStorageV1alpha1
}

func newFakeBucketPools(fake *FakeStorageV1alpha1) typedstoragev1alpha1.BucketPoolInterface {
	return &fakeBucketPools{
		gentype.NewFakeClientWithListAndApply[*v1alpha1.BucketPool, *v1alpha1.BucketPoolList, *storagev1alpha1.BucketPoolApplyConfiguration](
			fake.Fake,
			"",
			v1alpha1.SchemeGroupVersion.WithResource("bucketpools"),
			v1alpha1.SchemeGroupVersion.WithKind("BucketPool"),
			func() *v1alpha1.BucketPool { return &v1alpha1.BucketPool{} },
			func() *v1alpha1.BucketPoolList { return &v1alpha1.BucketPoolList{} },
			func(dst, src *v1alpha1.BucketPoolList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.BucketPoolList) []*v1alpha1.BucketPool { return gentype.ToPointerSlice(list.Items) },
			func(list *v1alpha1.BucketPoolList, items []*v1alpha1.BucketPool) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
