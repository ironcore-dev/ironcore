// SPDX-FileCopyrightText: 2023 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	"context"

	v1alpha1 "github.com/ironcore-dev/ironcore/api/storage/v1alpha1"
	storagev1alpha1 "github.com/ironcore-dev/ironcore/client-go/applyconfigurations/storage/v1alpha1"
	scheme "github.com/ironcore-dev/ironcore/client-go/ironcore/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// BucketsGetter has a method to return a BucketInterface.
// A group's client should implement this interface.
type BucketsGetter interface {
	Buckets(namespace string) BucketInterface
}

// BucketInterface has methods to work with Bucket resources.
type BucketInterface interface {
	Create(ctx context.Context, bucket *v1alpha1.Bucket, opts v1.CreateOptions) (*v1alpha1.Bucket, error)
	Update(ctx context.Context, bucket *v1alpha1.Bucket, opts v1.UpdateOptions) (*v1alpha1.Bucket, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, bucket *v1alpha1.Bucket, opts v1.UpdateOptions) (*v1alpha1.Bucket, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1alpha1.Bucket, error)
	List(ctx context.Context, opts v1.ListOptions) (*v1alpha1.BucketList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v1alpha1.Bucket, err error)
	Apply(ctx context.Context, bucket *storagev1alpha1.BucketApplyConfiguration, opts v1.ApplyOptions) (result *v1alpha1.Bucket, err error)
	// Add a +genclient:noStatus comment above the type to avoid generating ApplyStatus().
	ApplyStatus(ctx context.Context, bucket *storagev1alpha1.BucketApplyConfiguration, opts v1.ApplyOptions) (result *v1alpha1.Bucket, err error)
	BucketExpansion
}

// buckets implements BucketInterface
type buckets struct {
	*gentype.ClientWithListAndApply[*v1alpha1.Bucket, *v1alpha1.BucketList, *storagev1alpha1.BucketApplyConfiguration]
}

// newBuckets returns a Buckets
func newBuckets(c *StorageV1alpha1Client, namespace string) *buckets {
	return &buckets{
		gentype.NewClientWithListAndApply[*v1alpha1.Bucket, *v1alpha1.BucketList, *storagev1alpha1.BucketApplyConfiguration](
			"buckets",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *v1alpha1.Bucket { return &v1alpha1.Bucket{} },
			func() *v1alpha1.BucketList { return &v1alpha1.BucketList{} }),
	}
}
