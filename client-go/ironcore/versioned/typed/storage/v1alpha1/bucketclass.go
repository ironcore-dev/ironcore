// SPDX-FileCopyrightText: 2023 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	context "context"

	storagev1alpha1 "github.com/ironcore-dev/ironcore/api/storage/v1alpha1"
	applyconfigurationsstoragev1alpha1 "github.com/ironcore-dev/ironcore/client-go/applyconfigurations/storage/v1alpha1"
	scheme "github.com/ironcore-dev/ironcore/client-go/ironcore/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// BucketClassesGetter has a method to return a BucketClassInterface.
// A group's client should implement this interface.
type BucketClassesGetter interface {
	BucketClasses() BucketClassInterface
}

// BucketClassInterface has methods to work with BucketClass resources.
type BucketClassInterface interface {
	Create(ctx context.Context, bucketClass *storagev1alpha1.BucketClass, opts v1.CreateOptions) (*storagev1alpha1.BucketClass, error)
	Update(ctx context.Context, bucketClass *storagev1alpha1.BucketClass, opts v1.UpdateOptions) (*storagev1alpha1.BucketClass, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*storagev1alpha1.BucketClass, error)
	List(ctx context.Context, opts v1.ListOptions) (*storagev1alpha1.BucketClassList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *storagev1alpha1.BucketClass, err error)
	Apply(ctx context.Context, bucketClass *applyconfigurationsstoragev1alpha1.BucketClassApplyConfiguration, opts v1.ApplyOptions) (result *storagev1alpha1.BucketClass, err error)
	BucketClassExpansion
}

// bucketClasses implements BucketClassInterface
type bucketClasses struct {
	*gentype.ClientWithListAndApply[*storagev1alpha1.BucketClass, *storagev1alpha1.BucketClassList, *applyconfigurationsstoragev1alpha1.BucketClassApplyConfiguration]
}

// newBucketClasses returns a BucketClasses
func newBucketClasses(c *StorageV1alpha1Client) *bucketClasses {
	return &bucketClasses{
		gentype.NewClientWithListAndApply[*storagev1alpha1.BucketClass, *storagev1alpha1.BucketClassList, *applyconfigurationsstoragev1alpha1.BucketClassApplyConfiguration](
			"bucketclasses",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *storagev1alpha1.BucketClass { return &storagev1alpha1.BucketClass{} },
			func() *storagev1alpha1.BucketClassList { return &storagev1alpha1.BucketClassList{} },
		),
	}
}
