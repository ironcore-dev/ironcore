// SPDX-FileCopyrightText: 2025 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	storagev1alpha1 "github.com/ironcore-dev/ironcore/api/storage/v1alpha1"
	resource "k8s.io/apimachinery/pkg/api/resource"
)

// VolumeSnapshotStatusApplyConfiguration represents a declarative configuration of the VolumeSnapshotStatus type for use
// with apply.
type VolumeSnapshotStatusApplyConfiguration struct {
	State       *storagev1alpha1.VolumeSnapshotState `json:"state,omitempty"`
	RestoreSize *resource.Quantity                   `json:"restoreSize,omitempty"`
}

// VolumeSnapshotStatusApplyConfiguration constructs a declarative configuration of the VolumeSnapshotStatus type for use with
// apply.
func VolumeSnapshotStatus() *VolumeSnapshotStatusApplyConfiguration {
	return &VolumeSnapshotStatusApplyConfiguration{}
}

// WithState sets the State field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the State field is set to the value of the last call.
func (b *VolumeSnapshotStatusApplyConfiguration) WithState(value storagev1alpha1.VolumeSnapshotState) *VolumeSnapshotStatusApplyConfiguration {
	b.State = &value
	return b
}

// WithRestoreSize sets the RestoreSize field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RestoreSize field is set to the value of the last call.
func (b *VolumeSnapshotStatusApplyConfiguration) WithRestoreSize(value resource.Quantity) *VolumeSnapshotStatusApplyConfiguration {
	b.RestoreSize = &value
	return b
}
