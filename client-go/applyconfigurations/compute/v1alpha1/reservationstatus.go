// SPDX-FileCopyrightText: 2023 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// ReservationStatusApplyConfiguration represents an declarative configuration of the ReservationStatus type for use
// with apply.
type ReservationStatusApplyConfiguration struct {
	Pools []ReservationPoolStatusApplyConfiguration `json:"pools,omitempty"`
}

// ReservationStatusApplyConfiguration constructs an declarative configuration of the ReservationStatus type for use with
// apply.
func ReservationStatus() *ReservationStatusApplyConfiguration {
	return &ReservationStatusApplyConfiguration{}
}

// WithPools adds the given value to the Pools field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Pools field.
func (b *ReservationStatusApplyConfiguration) WithPools(values ...*ReservationPoolStatusApplyConfiguration) *ReservationStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithPools")
		}
		b.Pools = append(b.Pools, *values[i])
	}
	return b
}
