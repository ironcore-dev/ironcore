// SPDX-FileCopyrightText: 2023 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/api/core/v1"
)

// VirtualIPSourceApplyConfiguration represents an declarative configuration of the VirtualIPSource type for use
// with apply.
type VirtualIPSourceApplyConfiguration struct {
	VirtualIPRef *v1.LocalObjectReference                    `json:"virtualIPRef,omitempty"`
	Ephemeral    *EphemeralVirtualIPSourceApplyConfiguration `json:"ephemeral,omitempty"`
}

// VirtualIPSourceApplyConfiguration constructs an declarative configuration of the VirtualIPSource type for use with
// apply.
func VirtualIPSource() *VirtualIPSourceApplyConfiguration {
	return &VirtualIPSourceApplyConfiguration{}
}

// WithVirtualIPRef sets the VirtualIPRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the VirtualIPRef field is set to the value of the last call.
func (b *VirtualIPSourceApplyConfiguration) WithVirtualIPRef(value v1.LocalObjectReference) *VirtualIPSourceApplyConfiguration {
	b.VirtualIPRef = &value
	return b
}

// WithEphemeral sets the Ephemeral field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Ephemeral field is set to the value of the last call.
func (b *VirtualIPSourceApplyConfiguration) WithEphemeral(value *EphemeralVirtualIPSourceApplyConfiguration) *VirtualIPSourceApplyConfiguration {
	b.Ephemeral = value
	return b
}
