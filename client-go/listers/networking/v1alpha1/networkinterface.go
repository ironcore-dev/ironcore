// SPDX-FileCopyrightText: 2023 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/ironcore-dev/ironcore/api/networking/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// NetworkInterfaceLister helps list NetworkInterfaces.
// All objects returned here must be treated as read-only.
type NetworkInterfaceLister interface {
	// List lists all NetworkInterfaces in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.NetworkInterface, err error)
	// NetworkInterfaces returns an object that can list and get NetworkInterfaces.
	NetworkInterfaces(namespace string) NetworkInterfaceNamespaceLister
	NetworkInterfaceListerExpansion
}

// networkInterfaceLister implements the NetworkInterfaceLister interface.
type networkInterfaceLister struct {
	indexer cache.Indexer
}

// NewNetworkInterfaceLister returns a new NetworkInterfaceLister.
func NewNetworkInterfaceLister(indexer cache.Indexer) NetworkInterfaceLister {
	return &networkInterfaceLister{indexer: indexer}
}

// List lists all NetworkInterfaces in the indexer.
func (s *networkInterfaceLister) List(selector labels.Selector) (ret []*v1alpha1.NetworkInterface, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NetworkInterface))
	})
	return ret, err
}

// NetworkInterfaces returns an object that can list and get NetworkInterfaces.
func (s *networkInterfaceLister) NetworkInterfaces(namespace string) NetworkInterfaceNamespaceLister {
	return networkInterfaceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// NetworkInterfaceNamespaceLister helps list and get NetworkInterfaces.
// All objects returned here must be treated as read-only.
type NetworkInterfaceNamespaceLister interface {
	// List lists all NetworkInterfaces in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.NetworkInterface, err error)
	// Get retrieves the NetworkInterface from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.NetworkInterface, error)
	NetworkInterfaceNamespaceListerExpansion
}

// networkInterfaceNamespaceLister implements the NetworkInterfaceNamespaceLister
// interface.
type networkInterfaceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all NetworkInterfaces in the indexer for a given namespace.
func (s networkInterfaceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.NetworkInterface, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NetworkInterface))
	})
	return ret, err
}

// Get retrieves the NetworkInterface from the indexer for a given namespace and name.
func (s networkInterfaceNamespaceLister) Get(name string) (*v1alpha1.NetworkInterface, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("networkinterface"), name)
	}
	return obj.(*v1alpha1.NetworkInterface), nil
}
