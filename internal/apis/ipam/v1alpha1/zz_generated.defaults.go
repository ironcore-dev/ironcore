//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// SPDX-FileCopyrightText: 2023 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by defaulter-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/ironcore-dev/ironcore/api/ipam/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// RegisterDefaults adds defaulters functions to the given scheme.
// Public to allow building arbitrary schemes.
// All generated defaulters are covering - they call all nested defaulters.
func RegisterDefaults(scheme *runtime.Scheme) error {
	scheme.AddTypeDefaultingFunc(&v1alpha1.Prefix{}, func(obj interface{}) { SetObjectDefaults_Prefix(obj.(*v1alpha1.Prefix)) })
	scheme.AddTypeDefaultingFunc(&v1alpha1.PrefixAllocation{}, func(obj interface{}) { SetObjectDefaults_PrefixAllocation(obj.(*v1alpha1.PrefixAllocation)) })
	scheme.AddTypeDefaultingFunc(&v1alpha1.PrefixAllocationList{}, func(obj interface{}) { SetObjectDefaults_PrefixAllocationList(obj.(*v1alpha1.PrefixAllocationList)) })
	scheme.AddTypeDefaultingFunc(&v1alpha1.PrefixList{}, func(obj interface{}) { SetObjectDefaults_PrefixList(obj.(*v1alpha1.PrefixList)) })
	return nil
}

func SetObjectDefaults_Prefix(in *v1alpha1.Prefix) {
	SetDefaults_PrefixSpec(&in.Spec)
	SetDefaults_PrefixStatus(&in.Status)
}

func SetObjectDefaults_PrefixAllocation(in *v1alpha1.PrefixAllocation) {
	SetDefaults_PrefixAllocationSpec(&in.Spec)
	SetDefaults_PrefixAllocationStatus(&in.Status)
}

func SetObjectDefaults_PrefixAllocationList(in *v1alpha1.PrefixAllocationList) {
	for i := range in.Items {
		a := &in.Items[i]
		SetObjectDefaults_PrefixAllocation(a)
	}
}

func SetObjectDefaults_PrefixList(in *v1alpha1.PrefixList) {
	for i := range in.Items {
		a := &in.Items[i]
		SetObjectDefaults_Prefix(a)
	}
}
