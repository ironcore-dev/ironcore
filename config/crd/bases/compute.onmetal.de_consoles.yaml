
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: consoles.compute.onmetal.de
spec:
  group: compute.onmetal.de
  names:
    kind: Console
    listKind: ConsoleList
    plural: consoles
    singular: console
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Console is the Schema for the consoles API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ConsoleSpec defines the desired state of Console
            properties:
              lighthouseClientConfig:
                description: LighthouseClientConfig is the ConsoleClientConfig for
                  the machine to connect to a common lighthouse.
                properties:
                  caBundle:
                    description: CABundle is a PEM encoded CA bundle which will be
                      used to validate the endpoint's server certificate. If unspecified,
                      system trust roots on the machine will be used.
                    format: byte
                    type: string
                  keySecret:
                    description: KeySecret is the key that will be looked up for a
                      client key.
                    properties:
                      key:
                        description: The key of the entry in the Secret resource's
                          `data` field to be used. Some instances of this field may
                          be defaulted, in others it may be required.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  service:
                    description: Service is the service to connect to.
                    properties:
                      name:
                        description: Name of the referenced service.
                        type: string
                      path:
                        description: '`path` is an optional URL path which will be
                          sent in any request to this service.'
                        type: string
                      port:
                        description: Port on the service hosting the console. Defaults
                          to 443 for backward compatibility. `port` should be a valid
                          port number (1-65535, inclusive).
                        format: int32
                        type: integer
                    required:
                    - name
                    type: object
                  url:
                    description: URL is the url to connect to.
                    type: string
                type: object
              machineRef:
                description: MachineRef references the machine to open a console to.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              type:
                description: Type is the ConsoleType to use.
                enum:
                - Service
                - Lighthouse
                type: string
            required:
            - machineRef
            - type
            type: object
          status:
            description: ConsoleStatus defines the observed state of Console
            properties:
              serviceClientConfig:
                properties:
                  caBundle:
                    description: CABundle is a PEM encoded CA bundle which will be
                      used to validate the endpoint's server certificate. If unspecified,
                      system trust roots on the machine will be used.
                    format: byte
                    type: string
                  keySecret:
                    description: KeySecret is the key that will be looked up for a
                      client key.
                    properties:
                      key:
                        description: The key of the entry in the Secret resource's
                          `data` field to be used. Some instances of this field may
                          be defaulted, in others it may be required.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  service:
                    description: Service is the service to connect to.
                    properties:
                      name:
                        description: Name of the referenced service.
                        type: string
                      path:
                        description: '`path` is an optional URL path which will be
                          sent in any request to this service.'
                        type: string
                      port:
                        description: Port on the service hosting the console. Defaults
                          to 443 for backward compatibility. `port` should be a valid
                          port number (1-65535, inclusive).
                        format: int32
                        type: integer
                    required:
                    - name
                    type: object
                  url:
                    description: URL is the url to connect to.
                    type: string
                type: object
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
