
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: volumes.storage.onmetal.de
spec:
  group: storage.onmetal.de
  names:
    kind: Volume
    listKind: VolumeList
    plural: volumes
    singular: volume
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.storagePool.name
      name: StoragePool
      type: string
    - jsonPath: .spec.storageClassRef.name
      name: StorageClass
      type: string
    - jsonPath: .status.state
      name: State
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Volume is the Schema for the volumes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VolumeSpec defines the desired state of Volume
            properties:
              claimRef:
                description: ClaimRef is the reference to the VolumeClaim used by
                  the Volume.
                properties:
                  name:
                    description: Name is the name of the referenced VolumeClaim.
                    type: string
                  uid:
                    description: UID is the UID of the referenced VolumeClaim.
                    type: string
                required:
                - name
                - uid
                type: object
              resources:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
                description: Resources is a description of the volume's resources
                  and capacity.
                type: object
              secretRef:
                description: SecretRef references the Secret containing the access
                  credentials to consume a Volume.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              storageClassRef:
                description: StorageClassRef is the storage class of a volume
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              storagePool:
                description: StoragePool indicates which storage pool to use for a
                  volume. If unset, the scheduler will figure out a suitable StoragePool.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              storagePoolSelector:
                additionalProperties:
                  type: string
                description: StoragePoolSelector selects a suitable StoragePool by
                  the given labels.
                type: object
              tolerations:
                description: Tolerations define tolerations the Volume has. Only StoragePools
                  whose taints covered by Tolerations will be considered to host the
                  Volume.
                items:
                  description: The resource this Toleration is attached to tolerates
                    any taint that matches the triple <key,value,effect> using the
                    matching operator <operator>.
                  properties:
                    effect:
                      description: Effect indicates the taint effect to match. Empty
                        means match all taint effects. When specified, allowed values
                        are NoSchedule.
                      enum:
                      - NoSchedule
                      type: string
                    key:
                      description: Key is the taint key that the toleration applies
                        to. Empty means match all taint keys. If the key is empty,
                        operator must be Exists; this combination means to match all
                        values and all keys.
                      type: string
                    operator:
                      description: Operator represents a key's relationship to the
                        value. Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a resource
                        can tolerate all taints of a particular category.
                      enum:
                      - Equal
                      - Exists
                      type: string
                    value:
                      description: Value is the taint value the toleration matches
                        to. If the operator is Exists, the value should be empty,
                        otherwise just a regular string.
                      type: string
                  type: object
                type: array
            required:
            - storageClassRef
            - storagePool
            type: object
          status:
            description: VolumeStatus defines the observed state of Volume
            properties:
              conditions:
                items:
                  description: VolumeCondition is one of the conditions of a volume.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the status
                        of a condition has transitioned from one state to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: LastUpdateTime is the last time a condition has
                        been updated.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human-readable explanation of why
                        the condition has a certain reason / state.
                      type: string
                    observedGeneration:
                      description: ObservedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      format: int64
                      type: integer
                    reason:
                      description: Reason is a machine-readable indication of why
                        the condition is in a certain state.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  required:
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              phase:
                description: Phase represents the VolumeClaim binding phase of a Volume.
                enum:
                - Pending
                - Available
                - Bound
                - Failed
                type: string
              state:
                description: State represents the infrastructure state of a Volume.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
